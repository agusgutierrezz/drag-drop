{"version":3,"sources":["gif.gif","components/Details.js","components/Error.js","components/Recipes.js","components/Response.js","components/Landing.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Details","props","useState","data","items","confort","param","array","map","elem","index","total","recipe","digest","push","sort","a","b","getConfort","healthy","fat","sugar","totalNutrients","quantity","getHealthy","console","log","percentage","health","conf","Math","round","getPerc","divStyle","backgroundImage","image","divStyle1","className","class","label","style","href","url","Error","Recipes","length","Response","state","isLoaded","active","query","fetch","this","then","res","json","setState","hits","src","gif","alt","onClick","action","id","Component","Landing","Search","item","setItem","setActive","useRef","type","onSubmit","e","event","preventDefault","target","username","value","placeholder","name","htmlFor","data-title","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d03f8893.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gif.15925492.gif\";","import React, { useState } from \"react\";\r\n\r\nconst Details = (props) => {\r\n  let [items, setItems] = useState(props.data);\r\n  const getHealthy = (param) => {\r\n    let array = [];\r\n    param.map((elem, index) => {\r\n      let fat = elem.recipe.digest[0].total;\r\n      let sugar = elem.recipe.totalNutrients[\"SUGAR\"].quantity;\r\n      array.push([[fat + sugar], index]);\r\n    });\r\n    var sortedArray = array.sort(function (a, b) {\r\n      return a[0] - b[0];\r\n    });\r\n\r\n    return param[sortedArray[0][1]];\r\n  };\r\n  const getConfort = (param) => {\r\n    let array = [];\r\n    param.map((elem, index) => {\r\n      let total = elem.recipe.digest[0].total;\r\n      array.push([total, index]);\r\n    });\r\n    var sortedArray = array.sort(function (a, b) {\r\n      return b[0] - a[0];\r\n    });\r\n    return param[sortedArray[0][1]];\r\n  };\r\n  const getPerc = (health, conf) => {\r\n    let total = (health * 100) / conf;\r\n    return Math.round(100 - total);\r\n  };\r\n  let confort = getConfort(items).recipe;\r\n  let healthy = getHealthy(items).recipe;\r\n  console.log(healthy);\r\n  let percentage = getPerc(healthy.digest[0].total, confort.digest[0].total);\r\n  const divStyle = {\r\n    backgroundImage: \"url(\" + healthy.image + \")\",\r\n  };\r\n  const divStyle1 = {\r\n    backgroundImage: \"url(\" + confort.image + \")\",\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div class=\"social\">\r\n            <h6>\r\n              This recipe contains\r\n              <span> {percentage}%</span> less trans and saturated fats\r\n            </h6>\r\n          </div>\r\n          <h2>{healthy.label}</h2>\r\n\r\n          <p>HEALTHY</p>\r\n          <div className=\"pic\" style={divStyle}>\r\n            {/* <img src={healthy.image} alt=\"photo\" /> */}\r\n          </div>\r\n          <ul>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n          </ul>\r\n\r\n          <button>\r\n            <a href={healthy.url}>GO</a>\r\n          </button>\r\n        </div>\r\n        <div className=\"card card2\">\r\n          <h2>{confort.label}</h2>\r\n\r\n          <p>CONFORT</p>\r\n          <div className=\"pic\" style={divStyle1}>\r\n            {/* <img src={confort.image} alt=\"photo\" /> */}\r\n          </div>\r\n          <ul>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n            <li></li>\r\n          </ul>\r\n\r\n          <button>\r\n            {\" \"}\r\n            <a href={confort.url}>GO</a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return <div>Sorry no recipes</div>;\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from \"react\";\r\nimport Details from \"./Details\";\r\nimport Error from \"./Error\";\r\n\r\nfunction Recipes(props) {\r\n  const [items, setItems] = useState(props.items);\r\n\r\n  return (\r\n    <div>\r\n      {items.length < 1 && <Error />}\r\n      {items.length && <Details data={items} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\r\nimport Recipes from \"./Recipes\";\r\nimport gif from \"../gif.gif\";\r\nimport Search from \"./Search\";\r\nclass Response extends Component {\r\n  state = {\r\n    items: [],\r\n    isLoaded: false,\r\n    active: false,\r\n    query: this.props.query,\r\n  };\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://api.edamam.com/search?q=${this.state.query}&app_id=cff280d4&app_key=226923e5aa91136747a00f1610faf59d&from=0&to=10&calories=591-722&health=alcohol-free`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          items: json.hits,\r\n          isLoaded: true,\r\n          active: true,\r\n        });\r\n      });\r\n  }\r\n  handleClick() {}\r\n  render() {\r\n    return (\r\n      <div className=\"transitions\">\r\n        {!this.state.isLoaded && (\r\n          <img className=\"loading\" src={gif} alt=\"gif\" />\r\n        )}\r\n        {this.state.active && <Recipes items={this.state.items} />}\r\n        {this.state.isLoaded && (\r\n          <button onClick={this.props.action} id=\"goBack\">\r\n            Go back!\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Response;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Landing(props) {\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <div className=\"photo-container\"></div>\r\n      <div className=\"text-container\">\r\n        <div>\r\n          <h1>What’s for dinner tonight?</h1>\r\n          <p>\r\n            Type the main ingredient, we’ll show you two options: a healthy\r\n            recipe and a confort one.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Response from \"./Response.js\";\r\nimport Landing from \"./Landing.js\";\r\n\r\nfunction Search(props) {\r\n  const [item, setItem] = useState(\"\");\r\n  const [active, setActive] = useState(true);\r\n\r\n  const textInput = useRef();\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setItem(event.target.username.value);\r\n    setActive(false);\r\n  };\r\n  const handleClick = () => {\r\n    setItem(\"\");\r\n    setActive(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {active && <Landing />}\r\n      {item && <Response action={handleClick} query={item} />}\r\n      {active && (\r\n        <div className=\"search-container\">\r\n          <input className=\"c-checkbox\" type=\"checkbox\" id=\"checkbox\" />\r\n          <div className=\"c-formContainer\">\r\n            <form\r\n              className=\"c-form\"\r\n              onSubmit={(e) => {\r\n                handleSubmit(e);\r\n              }}\r\n            >\r\n              <input\r\n                className=\"c-form__input\"\r\n                placeholder=\"type here\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n              />\r\n              <label className=\"c-form__buttonLabel\" htmlFor=\"checkbox\">\r\n                <button className=\"c-form__button\" type=\"submit\">\r\n                  Go!\r\n                </button>\r\n              </label>\r\n              <label\r\n                class=\"c-form__toggle\"\r\n                htmlFor=\"checkbox\"\r\n                data-title=\"Type!\"\r\n              ></label>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Search from \"./components/Search.js\";\n\nfunction App(props) {\n  return (\n    <div className=\"app-body\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}